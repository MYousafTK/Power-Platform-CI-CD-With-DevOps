<powerpagecomponent powerpagecomponentid="128ce96d-4a31-c934-a2b4-e45d20af401a">
  <content>{
  "filecontent": null,
  "displayorder": 6,
  "customcss": "",
  "customjavascript": "",
  "pagetemplateid": "9667a70c-0a7e-4925-8878-8f4802b5e7f9",
  "parentpageid": "18035bcd-4b2e-ec5e-7643-6cefccd3c89e",
  "partialurl": "crudTask",
  "isroot": false,
  "rootwebpageid": "63828088-604c-41b6-8c47-5dc71f15a52b",
  "title": "crudTask",
  "summary": "&lt;p&gt;This is a sample landing page designed to be a starting point for your website&lt;/p&gt;",
  "copy": "&lt;link rel=\"stylesheet\" href=\"https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css\"&gt;\n  &lt;link rel=\"stylesheet\" href=\"https://code.jquery.com/resources/demos/style.css\"&gt;\n  &lt;script src=\"https://code.jquery.com/jquery-3.6.0.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"https://code.jquery.com/ui/1.13.2/jquery-ui.js\"&gt;&lt;/script&gt;\n\n&lt;div class=\"row sectionBlockLayout text-start\" style=\"min-height: auto; padding: 8px;\"&gt;\n    &lt;div class=\"container\" style=\"display: flex; flex-wrap: wrap;\"&gt;\n      &lt;div class=\"col-lg-12 columnBlockLayout\" style=\"padding: 16px; margin: 60px 0px; min-height: 200px;\"&gt;\n      \n        \n&lt;div class=\"container\" style=\"margin:100px\"&gt;\n\n\n  {% fetchxml taskList %}\n  &lt;fetch version=\"1.0\" output-format=\"xml-platform\" mapping=\"logical\" distinct=\"false\"&gt;\n    &lt;entity name=\"task\"&gt;\n    &lt;attribute name=\"subject\"/&gt;\n    &lt;attribute name=\"statecode\"/&gt;\n    &lt;attribute name=\"prioritycode\"/&gt;\n    &lt;attribute name=\"scheduledend\"/&gt;\n    &lt;attribute name=\"createdby\"/&gt;\n    &lt;attribute name=\"regardingobjectid\"/&gt;\n    &lt;attribute name=\"activityid\"/&gt;\n    &lt;order attribute=\"subject\" descending=\"false\"/&gt;\n    &lt;/entity&gt;\n    &lt;/fetch&gt;\n  {% endfetchxmlâ€¯%}\n  \n  &lt;div id=\"processingMsg\" class=\"alert alert-warning\" role=\"alert\"&gt;&lt;span class=\"glyphicon glyphicon-info-sign\"&gt; &lt;/span&gt; Power Portal CRUD Operation Using WebApi\n  \n  &lt;/div&gt;\n  &lt;div style=\"float:right;\"&gt;\n  &lt;button id=\"createTaskNew\" class=\"btn btn-info btn-large\" onclick=\"create();\"&gt; &lt;i class=\"glyphicon glyphicon-plus\"&gt;&lt;/i&gt; Create  &lt;/button&gt;\n  &lt;button id=\"updateTask\" class=\"btn btn-success btn-large\" onclick=\"update('U');\" style=\"margin-left:20px\"&gt; &lt;i class=\"glyphicon glyphicon-inbox\"&gt;&lt;/i&gt; Update &lt;/button&gt;\n  &lt;button id=\"deleteTask\" value=\"Delete\" class=\"btn btn-danger btn-large \" onclick=\"update('D');\" style=\"margin-left:20px\"&gt; &lt;i class=\"glyphicon glyphicon-trash\"&gt; &lt;/i&gt; Delete &lt;/button&gt;\n  &lt;button id=\"refreshTask\" value=\"Refresh\" class=\"btn btn-warning btn-large \" onclick=\"javascript:location.reload(true);\" style=\"margin-left:20px\"&gt; &lt;i class=\"glyphicon glyphicon-refresh\"&gt; &lt;/i&gt; Refresh&lt;/button&gt;\n  &lt;/div&gt;\n  &lt;table id=\"tblData\" class=\"table\" style=\"border:1px solid\"&gt;\n          &lt;thead class=\"thead-dark\"&gt;\n              &lt;tr class=\"table-heading\"&gt;\n                 &lt;th&gt;&lt;input type=\"checkbox\" id=\"checkedAll\" style=\"margin-left:30px\"/&gt;&lt;/th&gt;\n                  &lt;th&gt;Subject&lt;/th&gt;\n                  &lt;th&gt;Priority&lt;/th&gt;\n                  &lt;th&gt;Due date&lt;/th&gt;\n              &lt;/tr&gt;\n          &lt;/thead&gt;\n          &lt;tbody&gt;\n          {% for result in taskList.results.entities %}\n         {% assign taskids  = result.activityid %}\n          &lt;tr&gt;\n              &lt;td&gt;&lt;input type=\"checkbox\" id=\"{{ result.activityid }}\" class=\"taskIDs\" style=\"margin-left:30px\" onchange=\"pushArrayCheckBox(this);\" /&gt;&lt;/td&gt;\n              &lt;td&gt;&lt;input type=\"dropdown\" id=\"txtSubject|{{result.activityid}}\" activityid=\"{{result.activityid}}\" value=\"{{ result.subject }}\" onchange=\"pushArray(this);\"&gt;&lt;/td&gt;\n              &lt;td&gt;{{ result.prioritycode.Label }}&lt;/td&gt;\n              &lt;td&gt;&lt;input type=\"text\" id=\"txtDue|{{result.activityid}}\" activityid=\"{{result.activityid}}\" value=\"{{ result.scheduledend }}\"  title=\"Please enter date only...\" onchange=\"pushArray(this);\"&gt;&lt;/td&gt;\n            \n           &lt;/tr&gt;\n            &lt;tr class=\"no-records\" style=\"display: none;\"&gt;\n               &lt;td colspan='6'&gt;No Record Found&lt;/td&gt;\n           &lt;/tr&gt;\n          {% endfor %}\n           \n      &lt;/tbody&gt;\n  &lt;/table&gt;\n  &lt;/div&gt;\n  &lt;script&gt;\n  (function(webapi, $) {\n      function safeAjax(ajaxOptions) {\n          var deferredAjax = $.Deferred();\n          shell.getTokenDeferred().done(function(token) {\n              // add headers for AJAX                 \n              if (!ajaxOptions.headers) {\n                  $.extend(ajaxOptions, {\n                      headers: {\n                          \"__RequestVerificationToken\": token\n                      }\n                  });\n              } else {\n                  ajaxOptions.headers[\"__RequestVerificationToken\"] = token;\n              }\n              $.ajax(ajaxOptions).done(function(data, textStatus, jqXHR) {\n                  validateLoginSession(data, textStatus, jqXHR, deferredAjax.resolve);\n              }).fail(deferredAjax.reject);\n              //AJAX             \n          }).fail(function() {\n              deferredAjax.rejectWith(this, arguments);\n              // on token failure pass the token AJAX and args           \n          });\n          return deferredAjax.promise();\n      }\n      webapi.safeAjax = safeAjax;\n  })(window.webapi = window.webapi || {}, jQuery)\n  \n\n  $( function() {\n    $( '[id^=\"txtDue|\"]' ).datepicker();\n  } );  \n\n\n\n  //custom code \n  var globalArray = [];\n  \n  function pushArray(currentObject) {\n      var str = currentObject.id;\n      var res = str.split(\"|\");\n      var contId = res[1];\n      var checkbox = document.getElementById(contId).checked;\n      var subject = document.getElementById(\"txtSubject|\" + contId).value;\n      var DueDate = document.getElementById(\"txtDue|\" + contId).value;\n      let objIndex = globalArray.findIndex((obj =&gt; obj.id == contId));\n      if (objIndex == -1) {\n          globalArray.push({\n              id: contId,\n              subject: subject,\n              due: DueDate,\n              checkboxval: checkbox\n          })\n      } else {\n          globalArray[objIndex].subject = subject;\n          globalArray[objIndex].due = DueDate;\n          globalArray[objIndex].checkboxval = checkbox;\n      }\n  }\n  \n  function pushArrayCheckBox(currentObject) {\n      var contId = currentObject.id;\n      var checkbox = document.getElementById(contId).checked;\n      var subject = document.getElementById(\"txtSubject|\" + contId).value;\n      var DueDate = document.getElementById(\"txtDue|\" + contId).value;\n      let objIndex = globalArray.findIndex((obj =&gt; obj.id == contId));\n      if (objIndex == -1) {\n          globalArray.push({\n              id: contId,\n              subject: subject,\n              due: DueDate,\n              checkboxval: checkbox\n          })\n      } else {\n          globalArray[objIndex].subject = subject;\n          globalArray[objIndex].due = DueDate;\n          globalArray[objIndex].checkboxval = checkbox;\n      }\n  }\n  \n  function update(flag) {\n      var i;\n      for (i = 0; i &lt; globalArray.length; i++) { //update checked row changes \n          alert(globalArray[i].subject + \"-\" + globalArray[i].due + \"-\" + globalArray[i].checkboxval);\n          if (globalArray[i].checkboxval == 1) //true\n          {\n              document.getElementById(\"processingMsg\").innerHTML = \"Processing....\";\n              try {\n                  let value = {\n                      \"subject\": globalArray[i].subject,\n                      \"scheduledend\": globalArray[i].due\n                  };\n                  if (flag == \"U\") {\n                      webapi.safeAjax({\n                          type: \"PATCH\",\n                          url: \"/_api/tasks(\" + globalArray[i].id + \")\",\n                          contentType: \"application/json\",\n                          data: JSON.stringify(value),\n                          success: function(res) {\n                              document.getElementById(\"processingMsg\").innerHTML = \"Records updated successfully.\";\n                          }\n                      });\n                  } else if (flag == \"D\") {\n                      webapi.safeAjax({\n                          type: \"DELETE\",\n                          url: \"/_api/tasks(\" + globalArray[i].id + \")\",\n                          contentType: \"application/json\",\n                          success: function(res) {\n                              document.getElementById(\"processingMsg\").innerHTML = \"Records deleted successfully. Refresh the page.\";\n                          }\n                      });\n                  }\n              } catch (e) {\n                  alert(e.message);\n              }\n          }\n      }\n  }\n  \n  function create() {\n      var sub = prompt(\"Please enter your Subject\", \"Subject\");\n      var priority = prompt(\"Please enter your Priority\", \"Priority\");\n      var due = prompt(\"Please enter your Due Date\", \"Due Date\");\n      //var phone = prompt(\"Please enter your phone number\", \"Phone Number\");\n      var recordObj = {\n          \"subject\": sub,\n          \"prioritycode\": priority,\n          \"scheduledend\": due\n         // \"telephone1\": phone\n      };\n      document.getElementById(\"processingMsg\").innerHTML = \"Creating record...\";\n      webapi.safeAjax({\n          type: \"POST\",\n          url: \"/_api/tasks\",\n          contentType: \"application/json\",\n          data: JSON.stringify(recordObj),\n          success: function(res, status, xhr) {\n              document.getElementById(\"processingMsg\").innerHTML = \"Records created successfully. Refresh the page. ID:\" + xhr.getResponseHeader(\"entityid\");\n          }\n      });\n  }\n  $(document).ready(function() {\n      $('#checkedAll').on('click', function() {\n          if (this.checked) {\n              $('.taskIDs').each(function() {\n                  this.checked = true;\n                  $(this).parent().parent().css({\n                      \"color\": \"red\",\n                      \"background-color\": \"#faffd6\"\n                  });\n              });\n          } else {\n              $('.taskIDs').each(function() {\n                  this.checked = false;\n                  $(this).parent().parent().css({\n                      \"color\": \"black\",\n                      \"background-color\": \"#ffffff\"\n                  });\n              });\n          }\n      });\n      $('.taskIDs').on('click', function() {\n          if ($('.taskIDs:checked').length == $('.taskIDs').length) {\n              $('#checkedAll').prop('checked', true);\n              $('.taskIDs').each(function() {\n                  $(this).parent().parent().css({\n                      \"color\": \"red\",\n                      \"background-color\": \"#faffd6\"\n                  });\n              });\n              $(this).parent().parent().css({\n                  \"color\": \"black\",\n                  \"background-color\": \"#ffffff\"\n              });\n          } else {\n              $('#checkedAll').prop('checked', false);\n              $(this).parent().parent().css({\n                  \"color\": \"black\",\n                  \"background-color\": \"#ffffff\"\n              });\n          }\n      });\n  });\n  //abn\n  &lt;/script&gt;\n      \n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n  ",
  "publishingstateid": "9b9e528b-c84c-4cb4-afaa-56d94d4eb921",
  "enablerating": false,
  "enabletracking": false,
  "excludefromsearch": false,
  "hiddenfromsitemap": true,
  "sharedpageconfiguration": false
}</content>
  <iscustomizable>1</iscustomizable>
  <name>crudTask</name>
  <powerpagecomponenttype>2</powerpagecomponenttype>
  <powerpagesiteid>
    <powerpagesiteid>6dc36fbc-1f20-4641-8e41-bf3fb5b9a72a</powerpagesiteid>
  </powerpagesiteid>
  <powerpagesitelanguageid>
    <powerpagesitelanguageid>d1f8d8ba-31d1-4964-9d0a-be4e20c8ecd2</powerpagesitelanguageid>
  </powerpagesitelanguageid>
  <searchcontent>crudTask&lt;link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css"&gt;
  &lt;link rel="stylesheet" href="https://code.jquery.com/resources/demos/style.css"&gt;
  &lt;script src="https://code.jquery.com/jquery-3.6.0.js"&gt;&lt;/script&gt;
  &lt;script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"&gt;&lt;/script&gt;

&lt;div class="row sectionBlockLayout text-start" style="min-height: auto; padding: 8px;"&gt;
    &lt;div class="container" style="display: flex; flex-wrap: wrap;"&gt;
      &lt;div class="col-lg-12 columnBlockLayout" style="padding: 16px; margin: 60px 0px; min-height: 200px;"&gt;
      
        
&lt;div class="container" style="margin:100px"&gt;


  {% fetchxml taskList %}
  &lt;fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"&gt;
    &lt;entity name="task"&gt;
    &lt;attribute name="subject"/&gt;
    &lt;attribute name="statecode"/&gt;
    &lt;attribute name="prioritycode"/&gt;
    &lt;attribute name="scheduledend"/&gt;
    &lt;attribute name="createdby"/&gt;
    &lt;attribute name="regardingobjectid"/&gt;
    &lt;attribute name="activityid"/&gt;
    &lt;order attribute="subject" descending="false"/&gt;
    &lt;/entity&gt;
    &lt;/fetch&gt;
  {% endfetchxmlâ€¯%}
  
  &lt;div id="processingMsg" class="alert alert-warning" role="alert"&gt;&lt;span class="glyphicon glyphicon-info-sign"&gt; &lt;/span&gt; Power Portal CRUD Operation Using WebApi
  
  &lt;/div&gt;
  &lt;div style="float:right;"&gt;
  &lt;button id="createTaskNew" class="btn btn-info btn-large" onclick="create();"&gt; &lt;i class="glyphicon glyphicon-plus"&gt;&lt;/i&gt; Create  &lt;/button&gt;
  &lt;button id="updateTask" class="btn btn-success btn-large" onclick="update('U');" style="margin-left:20px"&gt; &lt;i class="glyphicon glyphicon-inbox"&gt;&lt;/i&gt; Update &lt;/button&gt;
  &lt;button id="deleteTask" value="Delete" class="btn btn-danger btn-large " onclick="update('D');" style="margin-left:20px"&gt; &lt;i class="glyphicon glyphicon-trash"&gt; &lt;/i&gt; Delete &lt;/button&gt;
  &lt;button id="refreshTask" value="Refresh" class="btn btn-warning btn-large " onclick="javascript:location.reload(true);" style="margin-left:20px"&gt; &lt;i class="glyphicon glyphicon-refresh"&gt; &lt;/i&gt; Refresh&lt;/button&gt;
  &lt;/div&gt;
  &lt;table id="tblData" class="table" style="border:1px solid"&gt;
          &lt;thead class="thead-dark"&gt;
              &lt;tr class="table-heading"&gt;
                 &lt;th&gt;&lt;input type="checkbox" id="checkedAll" style="margin-left:30px"/&gt;&lt;/th&gt;
                  &lt;th&gt;Subject&lt;/th&gt;
                  &lt;th&gt;Priority&lt;/th&gt;
                  &lt;th&gt;Due date&lt;/th&gt;
              &lt;/tr&gt;
          &lt;/thead&gt;
          &lt;tbody&gt;
          {% for result in taskList.results.entities %}
         {% assign taskids  = result.activityid %}
          &lt;tr&gt;
              &lt;td&gt;&lt;input type="checkbox" id="{{ result.activityid }}" class="taskIDs" style="margin-left:30px" onchange="pushArrayCheckBox(this);" /&gt;&lt;/td&gt;
              &lt;td&gt;&lt;input type="dropdown" id="txtSubject|{{result.activityid}}" activityid="{{result.activityid}}" value="{{ result.subject }}" onchange="pushArray(this);"&gt;&lt;/td&gt;
              &lt;td&gt;{{ result.prioritycode.Label }}&lt;/td&gt;
              &lt;td&gt;&lt;input type="text" id="txtDue|{{result.activityid}}" activityid="{{result.activityid}}" value="{{ result.scheduledend }}"  title="Please enter date only..." onchange="pushArray(this);"&gt;&lt;/td&gt;
            
           &lt;/tr&gt;
            &lt;tr class="no-records" style="display: none;"&gt;
               &lt;td colspan='6'&gt;No Record Found&lt;/td&gt;
           &lt;/tr&gt;
          {% endfor %}
           
      &lt;/tbody&gt;
  &lt;/table&gt;
  &lt;/div&gt;
  &lt;script&gt;
  (function(webapi, $) {
      function safeAjax(ajaxOptions) {
          var deferredAjax = $.Deferred();
          shell.getTokenDeferred().done(function(token) {
              // add headers for AJAX                 
              if (!ajaxOptions.headers) {
                  $.extend(ajaxOptions, {
                      headers: {
                          "__RequestVerificationToken": token
                      }
                  });
              } else {
                  ajaxOptions.headers["__RequestVerificationToken"] = token;
              }
              $.ajax(ajaxOptions).done(function(data, textStatus, jqXHR) {
                  validateLoginSession(data, textStatus, jqXHR, deferredAjax.resolve);
              }).fail(deferredAjax.reject);
              //AJAX             
          }).fail(function() {
              deferredAjax.rejectWith(this, arguments);
              // on token failure pass the token AJAX and args           
          });
          return deferredAjax.promise();
      }
      webapi.safeAjax = safeAjax;
  })(window.webapi = window.webapi || {}, jQuery)
  

  $( function() {
    $( '[id^="txtDue|"]' ).datepicker();
  } );  



  //custom code 
  var globalArray = [];
  
  function pushArray(currentObject) {
      var str = currentObject.id;
      var res = str.split("|");
      var contId = res[1];
      var checkbox = document.getElementById(contId).checked;
      var subject = document.getElementById("txtSubject|" + contId).value;
      var DueDate = document.getElementById("txtDue|" + contId).value;
      let objIndex = globalArray.findIndex((obj =&gt; obj.id == contId));
      if (objIndex == -1) {
          globalArray.push({
              id: contId,
              subject: subject,
              due: DueDate,
              checkboxval: checkbox
          })
      } else {
          globalArray[objIndex].subject = subject;
          globalArray[objIndex].due = DueDate;
          globalArray[objIndex].checkboxval = checkbox;
      }
  }
  
  function pushArrayCheckBox(currentObject) {
      var contId = currentObject.id;
      var checkbox = document.getElementById(contId).checked;
      var subject = document.getElementById("txtSubject|" + contId).value;
      var DueDate = document.getElementById("txtDue|" + contId).value;
      let objIndex = globalArray.findIndex((obj =&gt; obj.id == contId));
      if (objIndex == -1) {
          globalArray.push({
              id: contId,
              subject: subject,
              due: DueDate,
              checkboxval: checkbox
          })
      } else {
          globalArray[objIndex].subject = subject;
          globalArray[objIndex].due = DueDate;
          globalArray[objIndex].checkboxval = checkbox;
      }
  }
  
  function update(flag) {
      var i;
      for (i = 0; i &lt; globalArray.length; i++) { //update checked row changes 
          alert(globalArray[i].subject + "-" + globalArray[i].due + "-" + globalArray[i].checkboxval);
          if (globalArray[i].checkboxval == 1) //true
          {
              document.getElementById("processingMsg").innerHTML = "Processing....";
              try {
                  let value = {
                      "subject": globalArray[i].subject,
                      "scheduledend": globalArray[i].due
                  };
                  if (flag == "U") {
                      webapi.safeAjax({
                          type: "PATCH",
                          url: "/_api/tasks(" + globalArray[i].id + ")",
                          contentType: "application/json",
                          data: JSON.stringify(value),
                          success: function(res) {
                              document.getElementById("processingMsg").innerHTML = "Records updated successfully.";
                          }
                      });
                  } else if (flag == "D") {
                      webapi.safeAjax({
                          type: "DELETE",
                          url: "/_api/tasks(" + globalArray[i].id + ")",
                          contentType: "application/json",
                          success: function(res) {
                              document.getElementById("processingMsg").innerHTML = "Records deleted successfully. Refresh the page.";
                          }
                      });
                  }
              } catch (e) {
                  alert(e.message);
              }
          }
      }
  }
  
  function create() {
      var sub = prompt("Please enter your Subject", "Subject");
      var priority = prompt("Please enter your Priority", "Priority");
      var due = prompt("Please enter your Due Date", "Due Date");
      //var phone = prompt("Please enter your phone number", "Phone Number");
      var recordObj = {
          "subject": sub,
          "prioritycode": priority,
          "scheduledend": due
         // "telephone1": phone
      };
      document.getElementById("processingMsg").innerHTML = "Creating record...";
      webapi.safeAjax({
          type: "POST",
          url: "/_api/tasks",
          contentType: "application/json",
          data: JSON.stringify(recordObj),
          success: function(res, status, xhr) {
              document.getElementById("processingMsg").innerHTML = "Records created successfully. Refresh the page. ID:" + xhr.getResponseHeader("entityid");
          }
      });
  }
  $(document).ready(function() {
      $('#checkedAll').on('click', function() {
          if (this.checked) {
              $('.taskIDs').each(function() {
                  this.checked = true;
                  $(this).parent().parent().css({
                      "color": "red",
                      "background-color": "#faffd6"
                  });
              });
          } else {
              $('.taskIDs').each(function() {
                  this.checked = false;
                  $(this).parent().parent().css({
                      "color": "black",
                      "background-color": "#ffffff"
                  });
              });
          }
      });
      $('.taskIDs').on('click', function() {
          if ($('.taskIDs:checked').length == $('.taskIDs').length) {
              $('#checkedAll').prop('checked', true);
              $('.taskIDs').each(function() {
                  $(this).parent().parent().css({
                      "color": "red",
                      "background-color": "#faffd6"
                  });
              });
              $(this).parent().parent().css({
                  "color": "black",
                  "background-color": "#ffffff"
              });
          } else {
              $('#checkedAll').prop('checked', false);
              $(this).parent().parent().css({
                  "color": "black",
                  "background-color": "#ffffff"
              });
          }
      });
  });
  //abn
  &lt;/script&gt;
      
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  crudTask</searchcontent>
  <statecode>0</statecode>
  <statuscode>1</statuscode>
</powerpagecomponent>